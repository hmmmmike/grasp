#
# Colors
#
# A color may be any color name accepted by Tk, found at
# http://www.tcl.tk/man/tcl8.4/TkCmd/colors.htm,
# or the RGB code in the hexadecimal format '#RRGGBB'
#

color.task.preempted #FFFFFF
color.task.criticalSection #333333
color.task.betweenJobs blue
color.task.active #CCCCCC

#
# Pattern that the color will take. E.g. to get red dots for active tasks
# you would set color.task.active to red and pattern.task.active to gray12.
#
# Possible values: gray12 gray25 gray50 gray75 lines_up lines_down
#                  lines_vertical lines_horizontal
#

pattern.task.preempted ""
pattern.task.criticalSection lines_up
pattern.task.betweenJobs ""
pattern.task.active ""

color.isr.active orange

color.message.server.replenished green3
color.message.server.depleted orange
color.message.server.resumed green3
color.message.server.preempted orange
color.message.period blue
color.message.deadline red
color.message.delay gray
color.message.dummy black
color.message.wakeup black

color.semaphore.released green
color.semaphore.acquired orange
color.semaphore.suspended red

#
# Shapes for messages
#
# A message shape may be any of: 
# disk, cross, square, triangleUp, triangleDown, diamond, plus, circle
#

shape.message.server.replenished triangleUp
shape.message.server.depleted triangleDown
shape.message.server.resumed square
shape.message.server.preempted square
shape.message.period square
shape.message.deadline cross
shape.message.delay diamond
shape.message.dummy circle
shape.message.wakeup circle

shape.semaphore.released square
shape.semaphore.acquired square
shape.semaphore.suspended square

#
# Fonts
#
# font.family Helvetica | Courier | Times | "" for default
# font.size integer | "" for default
#
font.family ""
font.size ""

#
# Plot window
#

plot.defaultWidth 800
plot.defaultHeight 600

#
# Tasks
#

# Two views for tasks are supported: expanded and collapsed. In the expanded
# view each task is drawn on its own timeline, visualizing the preemptions.
# In the collapsed view all tasks (belonging to the same processor) are multiplexed
# onto the same timeline.
# plot.tasks expanded | collapsed
plot.tasks expanded

# The timeUnit specifies the number of pixels per time unit.
# plot.timeUnit integer
plot.timeUnit 4

# Precision of the time labels, expressed as number of decimal places
plot.timePrecision 3

plot.task.barHeight 20
plot.task.arrowHeight 20
plot.task.margin 10

#
# Timeline
#

# offset blow the timeline
plot.timeline.offsetY 20
plot.timeline.barHeight 4
plot.timeline.height 17
plot.timeline.labelsOffsetY 5
# minimum distance between two neighboring labels (in pixels)
plot.timeline.labelDistance 40
plot.timeline.markDistance 3
plot.timeline.headWidth 12

#
# Servers
#

plot.server.capacityHeight 80
plot.server.capacityUnit 8
plot.server.yAxisArrowMargin 15
plot.server.margin 25
plot.server.marginTop 25
plot.server.labelOffsetX 10

# Show messages upon server events, e.g. serverReplenishment.
# Accepted values are 1 (enable) or 0 (disable).
plot.server.showMessages 0

#
# Intervals
#

plot.interval.height 20
plot.interval.color black
# dah pattern for the interval line, where {2 4} means "2 pixels of line 
# followed by 4 pixels of space". use {} for solid line.
plot.interval.dash {1 4}

#
# Legend
#

plot.legend.offsetX 40
plot.legend.offsetY 25
plot.legend.itemHeight 20
plot.legend.itemWidth 10

# max width of an item label, in pixels.
plot.legend.itemLabelWidth 150

# margin between legend items, both vertical and horizontal
plot.legend.itemMargin 10

#
# Miscellaneous
#

plot.offsetX 30
plot.offsetY 30
plot.labelOffsetX 10
plot.dotRadius 2

#
# Buffer plot
#

bufferplot.bufferElementHeight 50
bufferplot.bufferElementWidth 20
bufferplot.offsetX 30
bufferplot.offsetY 30
bufferplot.bufferSpacing 100
bufferplot.colorFilled gray
bufferplot.colorEmpty white
